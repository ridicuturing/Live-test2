plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.github.ridicuturing'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenLocal()
	maven { url "https://maven.oschina.net/content/groups/public/" }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	//maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'


	//implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.7'





	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//implementation 'com.github.ridicuturing:satellite:0.0.1-SNAPSHOT'
	implementation 'cn.hutool:hutool-all:5.8.15'

	//mysql in release
	implementation 'io.asyncer:r2dbc-mysql:0.9.2'
	//implementation 'com.github.jasync-sql:jasync-r2dbc-mysql:2.1.23'


	//h2 in demo
	implementation 'com.h2database:h2'
	implementation 'io.r2dbc:r2dbc-h2'


	//implementation 'org.springframework.session:spring-session:1.3.5.RELEASE'
	//implementation 'org.springframework.boot:spring-boot-starter-security'


	// Groovy
	//implementation 'org.codehaus.groovy:groovy-templates:3.0.17'
	implementation 'org.codehaus.groovy:groovy-all:3.0.16'
	implementation 'org.apache.ivy:ivy:2.5.0'

	//implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel:2.2.10-RC1'
}
/*test {
	enabled = false
}*/

tasks.named('test') {
	useJUnitPlatform()
}

task buildJavaAndDocker(type: Exec) {
	// 设置 Docker 镜像的名称和标签
	def imageName = "chat-java:latest"

	// 使用 Gradle 的 Java 插件编译项目
	dependsOn('build')

	// 构建镜像需要执行的命令，命令中的 $dockerfilePath、$imageName 和 $jarFile 会在执行时被替换为实际路径
	commandLine 'docker', 'build', '-t', "${imageName}", "${rootDir}"
}

task buildDocker(type: Exec) {
	// 设置 Docker 镜像的名称和标签
	def imageName = "hoi4tech/chat-java:latest"

	// 构建镜像需要执行的命令，命令中的 $dockerfilePath、$imageName 和 $jarFile 会在执行时被替换为实际路径
	commandLine 'docker', 'build', '-t', "${imageName}", "${rootDir}"
}
